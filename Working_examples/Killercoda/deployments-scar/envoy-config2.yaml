apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy-config
data:
  envoy.yaml: |
    static_resources:
      listeners:
      # Listener 0 - multiplexer for both services
      - name: listener_0
        address:
          socket_address: { address: 0.0.0.0, port_value: 10000 }
        filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              stat_prefix: ingress_http
              route_config:
                name: local_route
                virtual_hosts:
                - name: backend
                  domains: ["*"]
                  routes:
                  - match: { prefix: "/httpbin" }
                    route:
                      cluster: httpbin_service
                      prefix_rewrite: "/"
                  - match: { prefix: "/nginx" }
                    route:
                      cluster: nginx_service
                      prefix_rewrite: "/"
                  # - match: { prefix: "/podb" }
                  #   route:
                  #     cluster: pod_b_envoy
                  #     prefix_rewrite: "/get"   # calls httpbin inside Pod B
              http_filters:
              - name: envoy.filters.http.router
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
              access_log:
              - name: envoy.access_loggers.stdout
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
                  log_format:
                    text_format: "[%START_TIME%] %DOWNSTREAM_REMOTE_ADDRESS% \"%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%\" %RESPONSE_CODE% %BYTES_SENT% \"%REQ(USER-AGENT)%\" \"%UPSTREAM_CLUSTER%\" %RESPONSE_DURATION%\n"

      # Listener 1 - direct to httpbin
      - name: listener_httpbin
        address:
          socket_address: { address: 0.0.0.0, port_value: 10001 }
        filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              stat_prefix: httpbin_listener
              route_config:
                name: httpbin_route
                virtual_hosts:
                - name: httpbin
                  domains: ["*"]
                  routes:
                  - match: { prefix: "/" }
                    route:
                      cluster: httpbin_service
              http_filters:
              - name: envoy.filters.http.router
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

      # Listener 2 - direct to nginx
      - name: listener_nginx
        address:
          socket_address: { address: 0.0.0.0, port_value: 10002 }
        filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              stat_prefix: nginx_listener
              route_config:
                name: nginx_route
                virtual_hosts:
                - name: nginx
                  domains: ["*"]
                  routes:
                  - match: { prefix: "/" }
                    route:
                      cluster: nginx_service
              http_filters:
              - name: envoy.filters.http.router
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

      clusters:
      - name: httpbin_service
        connect_timeout: 0.25s
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: httpbin_service
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: 127.0.0.1
                    port_value: 80

      - name: nginx_service
        connect_timeout: 0.25s
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: nginx_service
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: 127.0.0.1
                    port_value: 8080
      # - name: pod_b_envoy
      #   connect_timeout: 0.25s
      #   type: STRICT_DNS
      #   lb_policy: ROUND_ROBIN
      #   load_assignment:
      #     cluster_name: pod_b_envoy
      #     endpoints:
      #     - lb_endpoints:
      #       - endpoint:
      #           address:
      #             socket_address:
      #               address: example-app-b   # DNS of Pod B Service
      #               port_value: 10000

    admin:
      access_log_path: /tmp/admin_access.log
      address:
        socket_address: { address: 0.0.0.0, port_value: 9901 }
