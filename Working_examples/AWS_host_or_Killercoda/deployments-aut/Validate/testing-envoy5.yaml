apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy-config
data:
  envoy.yaml: |
    static_resources:
      listeners:
        - name: listener_0
          address:
            socket_address:
              address: 0.0.0.0
              port_value: 10000
          filter_chains:
            - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    stat_prefix: ingress_http
                    access_log:
                      - name: envoy.access_loggers.stdout
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
                          log_format:
                            text_format: |
                              [%START_TIME%] "%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%" %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% "%REQ(X-FORWARDED-FOR)%" "%REQ(USER-AGENT)%" "%REQ(X-REQUEST-ID)%" "%REQ(:AUTHORITY)%" "%UPSTREAM_HOST%" jwt_role="%REQ(x-jwt-role)%" rate_limited="%RESP(x-envoy-ratelimited)%"
                    route_config:
                      name: local_route
                      virtual_hosts:
                        - name: backend_services
                          domains: ["*"]
                          routes:
                            - match:
                                prefix: "/httpbin"
                              route:
                                cluster: httpbin_service
                                prefix_rewrite: "/"
                              rate_limits:
                                - actions:
                                    - generic_key:
                                        descriptor_value: "httpbin_route"
                                    - request_headers:
                                        header_name: "x-jwt-role"
                                        descriptor_key: "role"
                            - match:
                                prefix: "/nginx"
                              route:
                                cluster: nginx_service
                                prefix_rewrite: "/"
                              rate_limits:
                                - actions:
                                    - generic_key:
                                        descriptor_value: "nginx_route"
                                    - request_headers:
                                        header_name: "x-jwt-role"
                                        descriptor_key: "role"

                    http_filters:
                      # JWT Authentication
                      - name: envoy.filters.http.jwt_authn
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication
                          providers:
                            dummy_provider:
                              issuer: "test-issuer"
                              local_jwks:
                                inline_string: |
                                  {
                                    "keys": [
                                      {
                                        "kty": "oct",
                                        "kid": "testkey",
                                        "k": "dGVzdHNlY3JldA=="
                                      }
                                    ]
                                  }
                              forward: true
                              forward_payload_header: "x-jwt-role"
                              payload_in_metadata: "jwt_payload"
                          rules:
                            - match: { prefix: "/" }
                              requires:
                                provider_name: dummy_provider

                      # Global Rate Limit filter (MUST be before router)
                      - name: envoy.filters.http.ratelimit
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ratelimit.v3.RateLimit
                          domain: test_domain
                          timeout: 1s
                          failure_mode_deny: false
                          enable_x_ratelimit_headers: DRAFT_VERSION_03
                          rate_limit_service:
                            grpc_service:
                              envoy_grpc:
                                cluster_name: ratelimit_global
                            transport_api_version: V3

                      # RBAC Filter (simplified for testing)
                      - name: envoy.filters.http.rbac
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.rbac.v3.RBAC
                          rules:
                            action: ALLOW
                            policies:
                              allow-all:
                                permissions:
                                  - any: true
                                principals:
                                  - any: true

                      # Router (MUST be last)
                      - name: envoy.filters.http.router
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

      clusters:
        - name: httpbin_service
          type: STRICT_DNS
          connect_timeout: 0.25s
          load_assignment:
            cluster_name: httpbin_service
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: httpbin
                          port_value: 80

        - name: nginx_service
          type: STRICT_DNS
          connect_timeout: 0.25s
          load_assignment:
            cluster_name: nginx_service
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: nginx
                          port_value: 80

        - name: ratelimit_global
          type: STRICT_DNS
          connect_timeout: 0.25s
          lb_policy: ROUND_ROBIN
          typed_extension_protocol_options:
            envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
              "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
              explicit_http_config:
                http2_protocol_options: {}
          load_assignment:
            cluster_name: ratelimit_global
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: ratelimit-global
                          port_value: 8081

    admin:
      access_log_path: /tmp/admin_access.log
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 9901
