#Matching rules example:
static_resources:
  listeners:
  - name: listener_0
    address:
      socket_address: { address: 0.0.0.0, port_value: 10000 }
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: backend
              domains: ["*"]
              routes:
              - match: { prefix: "/service1" }
                route: { cluster: service1 }
              - match: { prefix: "/service2" }
                route: { cluster: service2 }
          http_filters:
          - name: envoy.filters.http.router
  clusters:
  - name: service1
    connect_timeout: 0.25s
    type: strict_dns
    lb_policy: round_robin
    load_assignment:
      cluster_name: service1
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 127.0.0.1
                port_value: 5001
  - name: service2
    connect_timeout: 0.25s
    type: strict_dns
    lb_policy: round_robin
    load_assignment:
      cluster_name: service2
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 127.0.0.1
                port_value: 5002
---
routes:
- match: { prefix: "/api" }
  route:
    weighted_clusters:
      clusters:
      - name: service1
        weight: 70
      - name: service2
        weight: 30
---
#Path rewrite
routes:
- match: { prefix: "/v1" }
  route:
    cluster: service1
    prefix_rewrite: "/"

#Header manipulation
request_headers_to_add:
- header:
    key: "x-envoy-test"
    value: "true"

---
#Use mock endpoints that randomly fail to see retries and circuit breakers in action.
clusters:
- name: service1
  circuit_breakers:
    thresholds:
      - max_connections: 1
        max_pending_requests: 1
        max_retries: 2
  retry_policy:
    retry_on: "5xx"
    num_retries: 3

---
access_log:
- name: envoy.access_loggers.file
  typed_config:
    "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
    path: "/tmp/envoy_access.log"
    format: "[%START_TIME%] %REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% -> %UPSTREAM_HOST%\n"
